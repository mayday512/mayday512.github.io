import{_ as a}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as t,c as p,a as n,b as e,d as o,f as c,r as l}from"./app.4684ad3e.js";const r={},i=c(`<h1 id="使用方法" tabindex="-1"><a class="header-anchor" href="#使用方法" aria-hidden="true">#</a> 使用方法</h1><h4 id="使用插值方式" tabindex="-1"><a class="header-anchor" href="#使用插值方式" aria-hidden="true">#</a> 使用插值方式</h4><p>在 input 中通过 v-model 指令双向绑定 message，然后在 methods 选项中定义 reversedMessage 方法，让 message 的内容反转，然后使用插值语法渲染到页面。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span> diV id <span class="token operator">=</span><span class="token string">&quot; app &quot;</span><span class="token operator">&gt;</span>
输入内容：<span class="token operator">&lt;</span> input type <span class="token operator">=</span><span class="token string">&quot; text &quot;</span> v<span class="token operator">-</span>model <span class="token operator">=</span><span class="token string">&quot; message &quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span> br <span class="token operator">/</span><span class="token operator">&gt;</span>
反转内容：<span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token function">reversedMessage</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token operator">&lt;</span><span class="token operator">/</span> div <span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>引入 vue 文件<span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span> script src <span class="token operator">=</span><span class="token string">&quot;https://unpkg.com/vue@next&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span> script <span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>script＞
<span class="token comment">//创建一个应用程序实例</span>
 <span class="token keyword">const</span> vm <span class="token operator">=</span> Vue <span class="token punctuation">.</span><span class="token function">createApp</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
<span class="token comment">//该函数返回数据对象</span>
 <span class="token function">data</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>
 <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">message</span> <span class="token operator">:</span><span class="token string">&#39;&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token comment">//在选项对象的 methods 属性中定义方法</span>
 <span class="token literal-property property">methods</span> <span class="token operator">:</span><span class="token punctuation">{</span>
 <span class="token function-variable function">reversedMessage</span> <span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
 <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>message<span class="token punctuation">.</span><span class="token function">split</span> <span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span> <span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token comment">//在指定的 DOM 元素上装载应用程序实例的根组件</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span> <span class="token function">mount</span> <span class="token punctuation">(</span><span class="token string">&#39;# app &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="使用事件调用" tabindex="-1"><a class="header-anchor" href="#使用事件调用" aria-hidden="true">#</a> 使用事件调用</h4><p>首先在 data()函数中定义 num 属性，然后在 methods 中定义 add()方法，该方法每次调用 num 自增。在页面中首先使用插值渲染 num 的值，使用 v-on 指令绑定 click 事件，然后在事件中调用 add()方法。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span> div id <span class="token operator">=</span><span class="token string">&quot; app &quot;</span><span class="token operator">&gt;</span>
<span class="token punctuation">{</span><span class="token punctuation">(</span> num <span class="token punctuation">)</span><span class="token punctuation">}</span>
<span class="token operator">&lt;</span> p <span class="token operator">&gt;</span><span class="token operator">&lt;</span> button v<span class="token operator">-</span>on <span class="token operator">:</span> click <span class="token operator">=</span><span class="token string">&quot;add ()&quot;</span><span class="token operator">&gt;</span>增加<span class="token operator">&lt;</span><span class="token operator">/</span>button <span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span> p <span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span> diV <span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>引入 vue 文件<span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span> script src <span class="token operator">=</span><span class="token string">&quot;https://unpkg.com/vuenext&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span> script <span class="token operator">&gt;</span>
<span class="token operator">&lt;</span> script <span class="token operator">&gt;</span>
<span class="token comment">//创建一个应用程序实例</span>
 <span class="token keyword">const</span> vm <span class="token operator">=</span> Vue <span class="token punctuation">.</span> <span class="token function">createApp</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>
该函数返回数据对象
 <span class="token function">data</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
 <span class="token keyword">return</span><span class="token operator">:</span><span class="token punctuation">{</span>
 <span class="token literal-property property">num</span> <span class="token operator">:</span><span class="token number">1</span>
  <span class="token punctuation">}</span>
 <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token comment">//在选项对象的 methods 属性中定义方法 </span>
<span class="token literal-property property">methods</span> <span class="token operator">:</span><span class="token punctuation">{</span>
 <span class="token function-variable function">add</span> <span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>
   <span class="token keyword">this</span><span class="token punctuation">.</span>num <span class="token operator">+=</span><span class="token number">1</span>
   <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token comment">//在指定的 DOM 元素上装载应用程序实例的根组件</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span> <span class="token function">mount</span> <span class="token punctuation">(</span><span class="token string">&#39;# app &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span> script <span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="传递参数" tabindex="-1"><a class="header-anchor" href="#传递参数" aria-hidden="true">#</a> 传递参数</h3><ol><li>在 methods 的方法中进行声明</li><li>调用方法时直接传递参数</li></ol><h3 id="方法之间调用" tabindex="-1"><a class="header-anchor" href="#方法之间调用" aria-hidden="true">#</a> 方法之间调用</h3>`,10),u={href:"https://postimg.cc/xk2kvX6y",target:"_blank",rel:"noopener noreferrer"},k=n("img",{src:"https://i.postimg.cc/pd9Dt887/QQ-20221114175726.jpg",alt:"QQ-20221114175726.jpg",loading:"lazy"},null,-1);function d(v,m){const s=l("ExternalLinkIcon");return t(),p("div",null,[i,n("p",null,[e("在 Vue 中，methods 选项中的一个方法可以调用 methods 中的另外一个方法，其语法格式如下： "),n("a",u,[k,o(s)])])])}const h=a(r,[["render",d],["__file","method.html.vue"]]);export{h as default};
