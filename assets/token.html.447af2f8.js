import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as e,c as o,a as n,d as a,f as t,b as c,r as l}from"./app.4684ad3e.js";const i={},u=t(`<h1 id="使用jwt完成认证授权" tabindex="-1"><a class="header-anchor" href="#使用jwt完成认证授权" aria-hidden="true">#</a> 使用JWT完成认证授权</h1><h2 id="生成token令牌" tabindex="-1"><a class="header-anchor" href="#生成token令牌" aria-hidden="true">#</a> 生成token令牌</h2><p>config.js(设置secretKey和token过期时间)</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token literal-property property">security</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token literal-property property">secretKey</span><span class="token operator">:</span><span class="token string">&quot;gong&quot;</span><span class="token punctuation">,</span>
        <span class="token comment">//过期时间</span>
        <span class="token literal-property property">expiresIn</span><span class="token operator">:</span><span class="token number">60</span><span class="token operator">*</span><span class="token number">60</span><span class="token operator">*</span><span class="token number">24</span><span class="token operator">*</span><span class="token number">30</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>util.js(生成token的函数)</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> jwt <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;jsonwebtoken&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> secretKey<span class="token punctuation">,</span>expiresIn<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../config/config&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>security
<span class="token keyword">const</span> <span class="token function-variable function">generateToken</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">uid<span class="token punctuation">,</span>scope</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">const</span> token <span class="token operator">=</span> jwt<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span><span class="token punctuation">{</span>uid<span class="token punctuation">,</span>scope<span class="token punctuation">}</span><span class="token punctuation">,</span>secretKey<span class="token punctuation">,</span><span class="token punctuation">{</span>expiresIn<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">return</span> token
<span class="token punctuation">}</span>
module<span class="token punctuation">.</span>exports<span class="token operator">=</span><span class="token punctuation">{</span>generateToken<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>token.js(post用户名邮件密码，数据库校验，生成token)</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> Router <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-router&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> bcrypt <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;bcryptjs&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Router</span>
<span class="token keyword">const</span> Koa <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Koa</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> parsar <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-bodyparser&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> User <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../models/user&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span>generateToken<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../../core/util&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span>Auth<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../../middlewares/auto&#39;</span><span class="token punctuation">)</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">parsar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
router<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/app/v1/user/token&#39;</span><span class="token punctuation">,</span><span class="token keyword">async</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span>next</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token comment">//取ID</span>
  <span class="token keyword">let</span> token<span class="token punctuation">;</span>
  <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
   <span class="token keyword">const</span> body <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span>
   <span class="token keyword">switch</span><span class="token punctuation">(</span>body<span class="token punctuation">.</span>type<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token string">&quot;usernick&quot;</span><span class="token operator">:</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token string">&quot;email&quot;</span><span class="token operator">:</span>  <span class="token comment">//判断是邮件登录还是用户名登录</span>
        <span class="token keyword">const</span> email <span class="token operator">=</span> body<span class="token punctuation">.</span>account
        <span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token keyword">await</span> User<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">where</span><span class="token operator">:</span><span class="token punctuation">{</span>
                email
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>user<span class="token punctuation">)</span><span class="token punctuation">{</span>
           ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string-property property">&quot;key&quot;</span><span class="token operator">:</span><span class="token string">&quot;用户名不存在&quot;</span><span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token comment">//判断密码是否正确</span>
        <span class="token keyword">const</span> correct <span class="token operator">=</span> bcrypt<span class="token punctuation">.</span><span class="token function">compareSync</span><span class="token punctuation">(</span>body<span class="token punctuation">.</span>secret<span class="token punctuation">,</span>user<span class="token punctuation">.</span>password<span class="token punctuation">)</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>correct<span class="token punctuation">)</span><span class="token punctuation">{</span>
          ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string-property property">&quot;key&quot;</span><span class="token operator">:</span><span class="token string">&quot;用户名与密码不匹配&quot;</span><span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span>
        <span class="token punctuation">}</span>
         token <span class="token operator">=</span> <span class="token function">generateToken</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>id<span class="token punctuation">,</span>Auth<span class="token punctuation">.</span><span class="token constant">DOCTOR</span><span class="token punctuation">)</span><span class="token comment">//第二个参数是角色</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">default</span><span class="token operator">:</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>token<span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token comment">//导出</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> router
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>成功获取token</p>`,9),r={href:"https://postimg.cc/H88WMT0C",target:"_blank",rel:"noopener noreferrer"},k=n("img",{src:"https://i.postimg.cc/J0Ps9nGt/VB-L-0-OW-S2-40-16-V0.png",alt:"VB-L-0-OW-S2-40-16-V0.png",loading:"lazy"},null,-1),d=n("p",null,"用户名不存在",-1),v={href:"https://postimg.cc/7G7QJcCW",target:"_blank",rel:"noopener noreferrer"},m=n("img",{src:"https://i.postimg.cc/tTm0wG9p/8-G-6-NJ-0-ZWUX-30-BA5-DG-W.png",alt:"8-G-6-NJ-0-ZWUX-30-BA5-DG-W.png",loading:"lazy"},null,-1),b=n("p",null,"用户名与密码不符合",-1),y={href:"https://postimg.cc/JD1PtnLG",target:"_blank",rel:"noopener noreferrer"},g=n("img",{src:"https://i.postimg.cc/0QS3WMXd/BIEL2-N3-NWAZFTF3-Z49.png",alt:"BIEL2-N3-NWAZFTF3-Z49.png",loading:"lazy"},null,-1),w=n("h2",{id:"权限校验",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#权限校验","aria-hidden":"true"},"#"),c(" 权限校验")],-1),h=n("p",null,"apifox：",-1),f={href:"https://postimg.cc/qNjhcvfP",target:"_blank",rel:"noopener noreferrer"},_=n("img",{src:"https://i.postimg.cc/QMrQ3Ffd/5-G-T-FWQFBY75-NM-GVILLS.png",alt:"5-G-T-FWQFBY75-NM-GVILLS.png",loading:"lazy"},null,-1),q=t(`<p>good.js(给接口设置权限)</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> Router <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-router&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Router</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span>Auth<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../../middlewares/auto&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> HttpException <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../../core/http-exception&#39;</span><span class="token punctuation">)</span>
router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/app/v1/good/list&#39;</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Auth</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">.</span>m<span class="token punctuation">,</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span>next</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> ctx<span class="token punctuation">.</span>auth<span class="token punctuation">.</span>uid
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token comment">//导出</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> router
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>new Auth(9).m里面的数字 8&lt;9&lt;16 用户不可访问,管理员可访问，默认为1</p><p>auto.js(校验token是否为空是否合法是否权限不足)</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> basicAuth <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;basic-auth&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> secretKey<span class="token punctuation">,</span>expiresIn<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../config/config&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>security
<span class="token keyword">const</span> <span class="token punctuation">{</span>Forbidden<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../core/http-exception&#39;</span><span class="token punctuation">)</span> 
<span class="token keyword">const</span> jwt <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;jsonwebtoken&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> req <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa2-request&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">Auth</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">level</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>level <span class="token operator">=</span> level<span class="token operator">||</span><span class="token number">1</span>
     Auth<span class="token punctuation">.</span><span class="token constant">DOCTOR</span> <span class="token operator">=</span> <span class="token number">8</span>
     Auth<span class="token punctuation">.</span><span class="token constant">ADMIN</span> <span class="token operator">=</span> <span class="token number">16</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">get</span> <span class="token function">m</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment">//这是一个中间件</span>
    <span class="token keyword">return</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span>next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        <span class="token keyword">const</span> token <span class="token operator">=</span> <span class="token function">basicAuth</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span>req<span class="token punctuation">)</span>
        
      <span class="token keyword">let</span> errMsg <span class="token operator">=</span> <span class="token string">&#39;token不合法&#39;</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>token<span class="token operator">||</span><span class="token operator">!</span>token<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Forbidden</span><span class="token punctuation">(</span>errMsg<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">try</span><span class="token punctuation">{</span>
        <span class="token keyword">var</span> decode <span class="token operator">=</span> jwt<span class="token punctuation">.</span><span class="token function">verify</span><span class="token punctuation">(</span>token<span class="token punctuation">.</span>name<span class="token punctuation">,</span>secretKey<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">{</span>
           <span class="token keyword">if</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>name <span class="token operator">==</span> <span class="token string">&quot;TokenExpiredError&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Forbidden</span><span class="token punctuation">(</span><span class="token string">&quot;token已过期&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>decode<span class="token punctuation">.</span>scope<span class="token operator">&lt;</span><span class="token keyword">this</span><span class="token punctuation">.</span>level<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Forbidden</span><span class="token punctuation">(</span><span class="token string">&quot;权限不够&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        ctx<span class="token punctuation">.</span>auth <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">uid</span><span class="token operator">:</span>decode<span class="token punctuation">.</span>uid<span class="token punctuation">,</span>
            <span class="token literal-property property">scope</span><span class="token operator">:</span>decode<span class="token punctuation">.</span>scope
        <span class="token punctuation">}</span>
        <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>Auth<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>token为空或错误</p>`,6),x={href:"https://postimg.cc/9zzQsHRh",target:"_blank",rel:"noopener noreferrer"},j=n("img",{src:"https://i.postimg.cc/Y2zLGpth/OD0-SGEHARZ-RON2-PB-L0-F1.png",alt:"OD0-SGEHARZ-RON2-PB-L0-F1.png",loading:"lazy"},null,-1),T=n("p",null,"权限不够",-1),A={href:"https://postimg.cc/LYYBJZW4",target:"_blank",rel:"noopener noreferrer"},W=n("img",{src:"https://i.postimg.cc/TwQkHVqb/5-T3-VB-Q-T-RV-7-IWK0.png",alt:"5-T3-VB-Q-T-RV-7-IWK0.png",loading:"lazy"},null,-1);function B(N,F){const s=l("ExternalLinkIcon");return e(),o("div",null,[u,n("p",null,[n("a",r,[k,a(s)])]),d,n("p",null,[n("a",v,[m,a(s)])]),b,n("p",null,[n("a",y,[g,a(s)])]),w,h,n("p",null,[n("a",f,[_,a(s)])]),q,n("p",null,[n("a",x,[j,a(s)])]),T,n("p",null,[n("a",A,[W,a(s)])])])}const V=p(i,[["render",B],["__file","token.html.vue"]]);export{V as default};
