import{_ as c}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c as i,a as e,d as t,b as n,f as s,r}from"./app.4684ad3e.js";const l={},d=e("h1",{id:"js的内存管理与闭包",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#js的内存管理与闭包","aria-hidden":"true"},"#"),n(" js的内存管理与闭包")],-1),h=e("p",null,"一个被星标了的苹果文章。",-1),_=e("h2",{id:"什么是内存管理",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#什么是内存管理","aria-hidden":"true"},"#"),n(" 什么是内存管理")],-1),g={href:"https://www.imagehub.cc/image/lprW4",target:"_blank",rel:"noopener noreferrer"},p=e("img",{src:"https://s1.imagehub.cc/images/2022/12/28/674e51c16102b6fa08811881c5144b21.png",alt:"674e51c16102b6fa08811881c5144b21.png",loading:"lazy"},null,-1),b=e("p",null,"js通常情况下不需要手动管理",-1),f=e("h2",{id:"js的内存管理",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#js的内存管理","aria-hidden":"true"},"#"),n(" js的内存管理")],-1),u=e("h3",{id:"js内存分配",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#js内存分配","aria-hidden":"true"},"#"),n(" js内存分配")],-1),m={href:"https://www.imagehub.cc/image/loMAq",target:"_blank",rel:"noopener noreferrer"},w=e("img",{src:"https://s1.imagehub.cc/images/2022/12/28/e2827ca685a0a813cd20858748e901d1.png",alt:"e2827ca685a0a813cd20858748e901d1.png",loading:"lazy"},null,-1),j=e("p",null,"基本数据类型：字符串（String）、数字(Number)、布尔(Boolean)、对空（Null）、未定义（Undefined）、Symbol",-1),k=e("p",null,"复杂数据类型，栈中存储的是堆里面的地址，对象(Object)、数组(Array)、函数(Function)",-1),y=e("h3",{id:"js的垃圾回收",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#js的垃圾回收","aria-hidden":"true"},"#"),n(" js的垃圾回收")],-1),x={href:"https://www.imagehub.cc/image/locsk",target:"_blank",rel:"noopener noreferrer"},z=e("img",{src:"https://s1.imagehub.cc/images/2022/12/28/3cd861046e9769163c0af08fad4aa565.png",alt:"3cd861046e9769163c0af08fad4aa565.png",loading:"lazy"},null,-1),v=e("h4",{id:"引用计数",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#引用计数","aria-hidden":"true"},"#"),n(" 引用计数")],-1),A={class:"custom-container tip"},N=e("p",{class:"custom-container-title"},"引用计数",-1),O={href:"https://www.imagehub.cc/image/losp6",target:"_blank",rel:"noopener noreferrer"},Z=e("img",{src:"https://s1.imagehub.cc/images/2022/12/28/426ba57e198bc64739ffdd191e246a65.png",alt:"426ba57e198bc64739ffdd191e246a65.png",loading:"lazy"},null,-1),B=e("p",null,"有一个引用指向当前对象，就把计数器加一。当引用为null（少一个引用），就减一",-1),S={href:"https://www.imagehub.cc/image/loj17",target:"_blank",rel:"noopener noreferrer"},V=e("img",{src:"https://s1.imagehub.cc/images/2022/12/28/0e337eddb72ab82b70dd1e732a34ae15.png",alt:"0e337eddb72ab82b70dd1e732a34ae15.png",loading:"lazy"},null,-1),E=e("p",null,"引用计数有一个弊端：循环引用，产生内存泄漏",-1),I={href:"https://www.imagehub.cc/image/lo84J",target:"_blank",rel:"noopener noreferrer"},M=e("img",{src:"https://s1.imagehub.cc/images/2022/12/28/2e67103ef1c2d32597be10c3d31539d2.png",alt:"2e67103ef1c2d32597be10c3d31539d2.png",loading:"lazy"},null,-1),T=e("h4",{id:"标记清除",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#标记清除","aria-hidden":"true"},"#"),n(" 标记清除")],-1),q={class:"custom-container tip"},F=e("p",{class:"custom-container-title"},"标记清楚",-1),H={href:"https://www.imagehub.cc/image/loaHr",target:"_blank",rel:"noopener noreferrer"},K=e("img",{src:"https://s1.imagehub.cc/images/2022/12/28/98f6e41fda9b2ffb1f09ee4dc12cbfde.png",alt:"98f6e41fda9b2ffb1f09ee4dc12cbfde.png",loading:"lazy"},null,-1),L=e("p",null,"上图中，M和N不可达，即使是相互引用，也会被销毁",-1),C=e("p",null,"js引擎比较广泛地采用标记清除算法，当然类似于v8引擎为了进行更好的优化，他在算法的实现细节上也会结合一些其他的算法",-1),G=s('<h2 id="闭包" tabindex="-1"><a class="header-anchor" href="#闭包" aria-hidden="true">#</a> 闭包</h2><h3 id="高阶函数" tabindex="-1"><a class="header-anchor" href="#高阶函数" aria-hidden="true">#</a> 高阶函数</h3><p>一个函数接收另外一个函数作为参数，或者该函数会返回另外一个函数作为返回值的函数，那么这个函数就称之为一个高阶函数</p><p>具体可参考js红宝书p153</p><h3 id="闭包的定义" tabindex="-1"><a class="header-anchor" href="#闭包的定义" aria-hidden="true">#</a> 闭包的定义</h3><p>具体可参考js红宝书p309</p>',6),J={href:"https://www.imagehub.cc/image/lZKKI",target:"_blank",rel:"noopener noreferrer"},P=e("img",{src:"https://s1.imagehub.cc/images/2022/12/28/fa8048a4ccd354c402e267f1cb5cf317.png",alt:"fa8048a4ccd354c402e267f1cb5cf317.png",loading:"lazy"},null,-1),U=e("h3",{id:"函数作为返回值在内存中的表现",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#函数作为返回值在内存中的表现","aria-hidden":"true"},"#"),n(" 函数作为返回值在内存中的表现")],-1),W={class:"custom-container info"},D=e("p",{class:"custom-container-title"},"相关信息",-1),Q={href:"https://www.imagehub.cc/image/lZFab",target:"_blank",rel:"noopener noreferrer"},R=e("img",{src:"https://s1.imagehub.cc/images/2022/12/28/21a5e8af9602361f316aca1bd8480eae.png",alt:"21a5e8af9602361f316aca1bd8480eae.png",loading:"lazy"},null,-1),X=e("p",null,"将bar的地址赋值给fn，foo执行完毕，函数上下文出栈",-1),Y={href:"https://www.imagehub.cc/image/lZqAT",target:"_blank",rel:"noopener noreferrer"},$=e("img",{src:"https://s1.imagehub.cc/images/2022/12/28/11122e55f00e4648a236a00ee2e92a00.png",alt:"11122e55f00e4648a236a00ee2e92a00.png",loading:"lazy"},null,-1),ee=e("p",null,"fn（）通过地址找到bar，创建一个AO",-1),ae=e("h3",{id:"闭包在内存中的表现",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#闭包在内存中的表现","aria-hidden":"true"},"#"),n(" 闭包在内存中的表现")],-1),te={class:"custom-container info"},ne=e("p",{class:"custom-container-title"},"相关信息",-1),se={href:"https://www.imagehub.cc/image/lZAn4",target:"_blank",rel:"noopener noreferrer"},ce=e("img",{src:"https://s1.imagehub.cc/images/2022/12/28/28365aac96ed8a21b0d4fcab06265715.png",alt:"28365aac96ed8a21b0d4fcab06265715.png",loading:"lazy"},null,-1),oe={href:"https://www.imagehub.cc/image/lZSza",target:"_blank",rel:"noopener noreferrer"},ie=e("img",{src:"https://s1.imagehub.cc/images/2022/12/28/1a968654f364ef0cfb1062140a6e2652.png",alt:"1a968654f364ef0cfb1062140a6e2652.png",loading:"lazy"},null,-1),re=e("p",null,"根据作用域链查找name。",-1),le=e("p",null,[n("执行bar的时候，依然能访问到本该销毁的foo当中的name，因此，"),e("em",null,[e("strong",null,"闭包=函数+可以访问的自由变量")])],-1),de=e("h3",{id:"闭包的内存泄露",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#闭包的内存泄露","aria-hidden":"true"},"#"),n(" 闭包的内存泄露")],-1),he={class:"custom-container info"},_e=e("p",{class:"custom-container-title"},"闭包内存演示图解",-1),ge={href:"https://www.imagehub.cc/image/lmaHO",target:"_blank",rel:"noopener noreferrer"},pe=e("img",{src:"https://s1.imagehub.cc/images/2022/12/28/3e32710948e13fc9cf1b3c5aec2a238c.png",alt:"3e32710948e13fc9cf1b3c5aec2a238c.png",loading:"lazy"},null,-1),be=e("p",null,"在return执行完后，foo的函数上下文出栈。但是foo的AO对象没有被销毁。因为全局作用域下fn对bar有引用，bar函数对象的parentscope指向foo的AO对象",-1),fe=e("p",null,"如果fn只执行一次，由于bar一直不被销毁，依旧占据内存，就称之为内存泄漏。如果要解决该内存泄漏，fn=null即可。",-1),ue={class:"custom-container tip"},me=e("p",{class:"custom-container-title"},"浏览器中的内存演示",-1),we={href:"https://www.imagehub.cc/image/0lGfv",target:"_blank",rel:"noopener noreferrer"},je=e("img",{src:"https://s1.imagehub.cc/images/2022/12/29/3d18b2443b3de2ba05af58c3f9ebb41a.png",alt:"3d18b2443b3de2ba05af58c3f9ebb41a.png",loading:"lazy"},null,-1),ke={href:"https://www.imagehub.cc/image/0lPtt",target:"_blank",rel:"noopener noreferrer"},ye=e("img",{src:"https://s1.imagehub.cc/images/2022/12/29/18f02c74a84ab811e00841b1325fe4fa.png",alt:"18f02c74a84ab811e00841b1325fe4fa.png",loading:"lazy"},null,-1),xe=e("p",null,"上图中的数组空间有4M，根据setTimeout创建100个再销毁一半",-1),ze=s('<div class="custom-container tip"><p class="custom-container-title">js闭包引用的自由变量销毁</p><p><img src="https://s1.imagehub.cc/images/2022/12/29/47cba301b028de3d7a821f6435132d9c.png" alt="47cba301b028de3d7a821f6435132d9c.png" loading="lazy"></p><p>这里的age，闭包是用不到的，从优化来说，js会把它删掉</p><p><img src="https://s1.imagehub.cc/images/2022/12/29/70629bac3778f4b9eb149a373eed79fb.png" alt="70629bac3778f4b9eb149a373eed79fb.png" loading="lazy"></p><p><img src="https://s1.imagehub.cc/images/2022/12/29/8a2e0b97fde60bde340d8861623f4dc8.png" alt="8a2e0b97fde60bde340d8861623f4dc8.png" loading="lazy"></p></div>',1);function ve(Ae,Ne){const a=r("ExternalLinkIcon");return o(),i("div",null,[d,h,_,e("p",null,[e("a",g,[p,t(a)])]),b,f,u,e("p",null,[e("a",m,[w,t(a)])]),j,k,y,e("p",null,[e("a",x,[z,t(a)])]),v,e("div",A,[N,e("p",null,[e("a",O,[Z,t(a)])]),B,e("p",null,[e("a",S,[V,t(a)])]),E,e("p",null,[e("a",I,[M,t(a)])])]),T,e("div",q,[F,e("p",null,[e("a",H,[K,t(a)])]),L,C]),G,e("p",null,[e("a",J,[P,t(a)])]),U,e("div",W,[D,e("p",null,[e("a",Q,[R,t(a)])]),X,e("p",null,[e("a",Y,[$,t(a)])]),ee]),ae,e("div",te,[ne,e("p",null,[e("a",se,[ce,t(a)])]),e("p",null,[e("a",oe,[ie,t(a)])]),re,le]),de,e("div",he,[_e,e("p",null,[e("a",ge,[pe,t(a)])]),be,fe]),e("div",ue,[me,e("p",null,[e("a",we,[je,t(a)])]),e("p",null,[e("a",ke,[ye,t(a)])]),xe]),ze])}const Be=c(l,[["render",ve],["__file","2.html.vue"]]);export{Be as default};
