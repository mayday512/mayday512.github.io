import{_ as a}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as e,c as r,f as o}from"./app.4684ad3e.js";const c={},n=o(`<h1 id="限定符" tabindex="-1"><a class="header-anchor" href="#限定符" aria-hidden="true">#</a> 限定符</h1><p>1、<strong>?</strong>:它前面的字符需要出现0次或1次</p><pre><code>例如：used?可以匹配到use和used
</code></pre><p>2、<strong><code>*</code></strong>:它会匹配0个或多个字符</p><pre><code>例如：ab*c可以匹配到ac,abc,abbbbbbc
</code></pre><p>3、<strong>+</strong>:它会匹配一次及以上的字符</p><pre><code>例如：ab+c可以匹配abc,abbbc,而不会匹配ac
</code></pre><p>4、<strong>{}</strong>:可以限定匹配的数量</p><pre><code>例如：ab{6}c,则匹配到abbbbbbc,而要限定b的数量在2到6之间，则是ab{2,6}c，如果只是两次以上，则省略括号里的6，写成ab{2,}c
</code></pre><h2 id="或-运算符" tabindex="-1"><a class="header-anchor" href="#或-运算符" aria-hidden="true">#</a> &quot;或&quot;运算符</h2><pre><code>例如：a (cat|dog)匹配的是a cat和a dog
</code></pre><h2 id="字符类" tabindex="-1"><a class="header-anchor" href="#字符类" aria-hidden="true">#</a> 字符类</h2><p>[]:表示里面的内容只能取自于它们</p><pre><code>例如：[a-z]表示所有小写的英文字母，[abc]能匹配到abc,aabbcc,abcc,[a-zA-Z]表示所有的英文字母，如果在[]前加上^,表示[]之外的字符
</code></pre><h2 id="元字符" tabindex="-1"><a class="header-anchor" href="#元字符" aria-hidden="true">#</a> 元字符</h2><p><strong>\\d</strong>:数字字符，等同于[0-9]</p><p><strong>\\w</strong>:单词字符</p><p><strong>\\s</strong>:空白符，包含Tab和换行符</p><p><strong>\\D</strong>:非数字字符</p><p><strong>\\W</strong>:非单词字符</p><p><strong>\\S</strong>:非空白符</p><p><strong>^</strong>:匹配行首</p><pre><code>例如：^a匹配abv,acccn
</code></pre><p><strong>$</strong>:匹配行尾</p><pre><code>例如：a$匹配tea,cba
</code></pre><h2 id="贪婪与懒惰匹配" tabindex="-1"><a class="header-anchor" href="#贪婪与懒惰匹配" aria-hidden="true">#</a> 贪婪与懒惰匹配</h2><p><strong>贪婪匹配</strong>：正则表达式通常的行为是匹配尽可能多的字符，比如这个表达式：a.*b，它将会匹配最长的以a开始，以b结束的字符串，如果用它来搜索aabab的话，它会匹配整个字符串aabab</p><p><strong>懒惰匹配</strong>：就是匹配尽可能少的字符，在能使整个匹配成功的前提下使用最少的重复，只要在它后面加上一个问号?即可，例如a.*?b匹配最短的，以a开始，以b结束的字符串，如果把它应用于aabab的话，它会匹配aab和ab，为什么第一个匹配是aab（第一到第三个字符）而不是ab（第二到第三个字符）？简单地说，因为正则表达式有一条比懒惰／贪婪规则优先级更高的规则，就是：最先开始的匹配拥有最高的优先权</p>`,28),t=[n];function s(d,b){return e(),r("div",null,t)}const g=a(c,[["render",s],["__file","Symbol.html.vue"]]);export{g as default};
