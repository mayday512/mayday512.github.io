const e=JSON.parse('{"key":"v-359a2586","path":"/zh/posts/js/paixu.html","title":"排序","lang":"zh-CN","frontmatter":{"icon":"edit","date":"2022-12-26T00:00:00.000Z","category":["js","算法"],"tag":["排序"],"description":"把某个乱序的数组变成升序序或者降序的数组， js比较常用sort方法进行排序 冒泡排序\\r比较所有相邻元素，如果第一个比第二个大就交换他们; \\r执行一次后可以保证最后一个数字是最大的; \\r重复执行 n-1 次，就可以完成排序; 动画演示：https://visualgo.net/zh/sorting?slide=7-1 ```js // 时间复杂度 O(...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/zh/posts/js/paixu.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"排序"}],["meta",{"property":"og:description","content":"把某个乱序的数组变成升序序或者降序的数组， js比较常用sort方法进行排序 冒泡排序\\r比较所有相邻元素，如果第一个比第二个大就交换他们; \\r执行一次后可以保证最后一个数字是最大的; \\r重复执行 n-1 次，就可以完成排序; 动画演示：https://visualgo.net/zh/sorting?slide=7-1 ```js // 时间复杂度 O(..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"article:tag","content":"排序"}],["meta",{"property":"article:published_time","content":"2022-12-26T00:00:00.000Z"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://mister-hope.github.io/posts/js/paixu.html"}]]},"excerpt":"","headers":[{"level":2,"title":"冒泡排序","slug":"冒泡排序","link":"#冒泡排序","children":[]},{"level":2,"title":"选择排序","slug":"选择排序","link":"#选择排序","children":[]},{"level":2,"title":"插入排序","slug":"插入排序","link":"#插入排序","children":[]},{"level":2,"title":"归并排序","slug":"归并排序","link":"#归并排序","children":[]},{"level":2,"title":"快速排序","slug":"快速排序","link":"#快速排序","children":[]},{"level":2,"title":"leetcode：合并两个有序链表","slug":"leetcode-合并两个有序链表","link":"#leetcode-合并两个有序链表","children":[{"level":3,"title":"解题步骤","slug":"解题步骤","link":"#解题步骤","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":4.51,"words":1354},"filePathRelative":"zh/posts/js/paixu.md","localizedDate":"2022年12月26日"}');export{e as data};
